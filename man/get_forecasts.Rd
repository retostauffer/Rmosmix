% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DWD_MOSMIX.R
\name{get_forecasts}
\alias{get_forecasts}
\alias{print.dwdforecast}
\title{Extract DWD MOSMIX Forecast Data}
\usage{
get_forecasts(station, doc, datetime, meta, parameter = NULL,
  as.zoo = TRUE)

\method{print}{dwdforecast}(x, ...)
}
\arguments{
\item{station}{\code{character} or \code{factor} containing the
name of the station (e.g., \code{"11120"}, \code{"06660"}).
The name has to match the name as provided by the XML file
(see \code{\link{get_station_information}}).}

\item{doc}{an \code{XMLInternalDocument} object as returned by
\code{xmlParse} (XML package).}

\item{datetime}{vector of time stamps for which the forecasts
are valid as returned by \code{\link{get_datetime}}.}

\item{meta}{object of class \code{dwdmeta} as returned by
\code{\link{get_meta_info}}.}

\item{parameter}{can be \code{NULL}, \code{character}, or a
vector of \code{character}. If not set (\code{parameter = NULL})
all forecast parameters will be returned containing data.
If set, only a subset will be returned (see 'Details' section).}

\item{as.zoo}{logical, default \code{TRUE}. If \code{FALSE} a
\code{data.frame} instead of a \code{zoo} object will be returned.}

\item{x}{an object of class \code{dwdforecast} as returned by
\code{\link{get_forecasts}}.}

\item{...}{forwarded to S3 methods. Unused for now.}
}
\value{
Returns a \code{data.frame} or \code{zoo} object
(depending on input \code{as.zoo}) with the DWD MOSMIX forecasts.
}
\description{
This is the reason this package exists. Extracts the DWD MOSMIX
forecasts for a specific station/location.
}
\details{
Extracts the forecasted values for a given location.
If \code{as.zoo = FALSE} a \code{data.frame} will be returned
containing the date/time for which the forecasts are valid
in the first column (\code{datetime}).

If \code{as.zoo = TRUE} a \code{zoo} object is returned. In this
case the \code{datetime} column (see above) will be removed.

The \code{parameter} input argument allows to subset the data.
If \code{parameter = NULL} all parameters will be returned
which provide at least one valid value. Columns containing
missing values only will be removed automatically.
\code{parameter} can be used to subset the data. Only the user
specified columns will be returned. Note that this could result
in an empty object if no values are available given the
\code{parmaeter} specification!
}
\examples{
# Latest L-type DWD MOSMIX forecast file for Innsbruck Airport
url <- "https://opendata.dwd.de/weather/local_forecasts/mos/MOSMIX_L/single_stations/11120/kml/MOSMIX_L_LATEST_11120.kmz"

# Download and extract file
kmz   <- tempfile("mosmix_demo_", fileext = ".kmz")
check <- download.file(url, kmz)
if ( inherits(check, "try-error") ) stop("Problems downloading the file!")
kml   <- unzip(kmz)

# Parsing the unzipped kml file (XML format)
# And extract required datetime and meta information.
doc <- XML::xmlParse(kml)
datetime <- get_datetime(doc)
meta     <- get_meta_info(doc)
stations <- get_station_information(doc)

# Extracting forecasts now
# - parameter = NULL:    extracts all parameters
# - as.zoo = TRUE:       returns a time series object.
fcst1 <- get_forecasts("11120", doc, datetime, meta)
print(fcst1)
print(class(fcst1))
print(head(fcst1[,1:5]))

# Extracting forecasts now
# - parameter = NULL:    extracts all parameters
# - as.zoo = FALSE:      returns a data.frame
fcst2 <- get_forecasts("11120", doc, datetime, meta, as.zoo = FALSE)
print(fcst2)
print(class(fcst2))
print(head(fcst2[,1:5]))

# Extracting forecasts now
# - parameter is set:    return 2m temperature and 2m dewpoint
#                        temperature only (see parameter_description method)
# - as.zoo = TRUE:       returns a time series object.
fcst3 <- get_forecasts("11120", doc, datetime, meta, parameter = c("TTT", "Td"))
print(fcst3)
print(class(fcst3))
print(head(fcst3))
plot(fcst3 - 273.15, screen = 1, col = c("red", "green"),
     xlab = "date/time", ylab = "TTT/Td [degrees Celsius]",
     main = "DWD MOSMIX Forecasts for Station Innsbruck Airport (11120)")

# Remove kmz and kml file
file.remove(kmz, kml)

}
\seealso{
get_station_information, get_meta_info, get_datetime, parameter_description.
}
\author{
Reto Stauffer

Reto Stauffer
}
